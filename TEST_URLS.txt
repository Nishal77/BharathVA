BHARATHVA API - WORKING TEST URLS

==============================================
POSTMAN CONFIGURATION (IMPORTANT!)
==============================================

For ALL POST requests in Postman:
1. Set Method to POST
2. In Headers tab, add: Content-Type: application/json
3. In Body tab:
   - Select "raw" (NOT form-data!)
   - Select "JSON" from dropdown (bottom right)
   - Paste JSON body

If you get "Required request body is missing" error:
- You forgot to select "raw" in Body tab
- You forgot to select "JSON" from dropdown
- Content-Type header is missing

==============================================
WORKING URLS
==============================================

Auth Service: http://localhost:8081/auth
Mobile Config: http://localhost:8081/auth

==============================================
1. HEALTH CHECK
==============================================

Method: GET
URL: http://localhost:8081/auth/register/health

No headers needed
No body needed

Expected: {"success":true,"data":"OK"}

==============================================
2. REGISTER EMAIL
==============================================

Method: POST
URL: http://localhost:8081/auth/register/email

Headers:
  Content-Type: application/json

Body (Select "raw" then "JSON"):
{"email":"nishalpoojary777@gmail.com"}

Expected Response:
{
  "success": true,
  "data": {
    "sessionToken": "abc-123-xyz",
    "currentStep": "OTP"
  }
}

SAVE THE sessionToken!

==============================================
3. VERIFY OTP
==============================================

Method: POST
URL: http://localhost:8081/auth/register/verify-otp

Headers:
  Content-Type: application/json

Body (raw + JSON):
{"sessionToken":"YOUR_SESSION_TOKEN_HERE","otp":"123456"}

Get OTP: docker-compose logs auth-service | grep "OTP code:"

==============================================
4. SUBMIT DETAILS
==============================================

Method: POST
URL: http://localhost:8081/auth/register/details

Headers:
  Content-Type: application/json

Body (raw + JSON):
{"sessionToken":"YOUR_SESSION_TOKEN_HERE","fullName":"Nishal Poojary","phoneNumber":"9876543210","countryCode":"+91","dateOfBirth":"1995-05-15"}

==============================================
5. CREATE PASSWORD
==============================================

Method: POST
URL: http://localhost:8081/auth/register/password

Headers:
  Content-Type: application/json

Body (raw + JSON):
{"sessionToken":"YOUR_SESSION_TOKEN_HERE","password":"TestPass123!","confirmPassword":"TestPass123!"}

==============================================
6. CHECK USERNAME
==============================================

Method: GET
URL: http://localhost:8081/auth/register/check-username?username=nishalpoojary

No headers needed

==============================================
7. CREATE USERNAME
==============================================

Method: POST
URL: http://localhost:8081/auth/register/username

Headers:
  Content-Type: application/json

Body (raw + JSON):
{"sessionToken":"YOUR_SESSION_TOKEN_HERE","username":"nishalpoojary"}

==============================================
8. LOGIN
==============================================

Method: POST
URL: http://localhost:8081/auth/login

Headers:
  Content-Type: application/json
  X-Device-Info: Postman | Test
  X-IP-Address: 127.0.0.1

Body (raw + JSON):
{"email":"nishalpoojary777@gmail.com","password":"TestPass123!"}

SAVE THE accessToken!

==============================================
9. VALIDATE TOKEN (FAST)
==============================================

Method: POST
URL: http://localhost:8081/auth/validate

Headers:
  Authorization: Bearer YOUR_ACCESS_TOKEN_HERE
  Content-Type: application/json

Body (raw + JSON):
{}

Performance: <10ms

==============================================
10. GET PROFILE
==============================================

Method: GET
URL: http://localhost:8081/auth/profile

Headers:
  Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

==============================================
11. GET SESSIONS
==============================================

Method: GET
URL: http://localhost:8081/auth/sessions

Headers:
  Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

==============================================
TERMINAL TESTS (Verified Working)
==============================================

# Health
curl -s http://localhost:8081/auth/register/health | jq '.'

# Register (save sessionToken from response)
curl -X POST http://localhost:8081/auth/register/email \
  -H "Content-Type: application/json" \
  -d '{"email":"nishalpoojary777@gmail.com"}' | jq '.'

# Get OTP
docker-compose logs auth-service | grep "OTP code:"

# Verify OTP (replace SESSION_TOKEN and OTP)
curl -X POST http://localhost:8081/auth/register/verify-otp \
  -H "Content-Type: application/json" \
  -d '{"sessionToken":"SESSION_TOKEN","otp":"123456"}' | jq '.'

# Submit Details
curl -X POST http://localhost:8081/auth/register/details \
  -H "Content-Type: application/json" \
  -d '{"sessionToken":"SESSION_TOKEN","fullName":"Nishal Poojary","phoneNumber":"9876543210","countryCode":"+91","dateOfBirth":"1995-05-15"}' | jq '.'

# Create Password
curl -X POST http://localhost:8081/auth/register/password \
  -H "Content-Type: application/json" \
  -d '{"sessionToken":"SESSION_TOKEN","password":"TestPass123!","confirmPassword":"TestPass123!"}' | jq '.'

# Create Username
curl -X POST http://localhost:8081/auth/register/username \
  -H "Content-Type: application/json" \
  -d '{"sessionToken":"SESSION_TOKEN","username":"nishalpoojary"}' | jq '.'

# Login
curl -X POST http://localhost:8081/auth/login \
  -H "Content-Type: application/json" \
  -H "X-Device-Info: Terminal | Test" \
  -H "X-IP-Address: 127.0.0.1" \
  -d '{"email":"nishalpoojary777@gmail.com","password":"TestPass123!"}' | jq '.'

==============================================
REDIS
==============================================

# Check Redis
docker exec bharathva-redis redis-cli ping

# View cached keys
docker exec bharathva-redis redis-cli KEYS "*"

# Monitor activity
docker exec bharathva-redis redis-cli MONITOR

==============================================
STATUS - ALL WORKING
==============================================

✅ Auth Service: http://localhost:8081/auth
✅ Redis: Connected & Caching
✅ Registration: Working (tested)
✅ Performance: <10ms validation
✅ Mobile Config: Fixed

RESTART MOBILE APP - Registration will work now!

