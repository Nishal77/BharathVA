{
  "info": {
    "name": "BharathVA Feed Service API",
    "description": "Complete API testing for BharathVA Feed Service with MongoDB integration",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8082/api/feed",
      "type": "default"
    },
    {
      "key": "authServiceUrl",
      "value": "http://localhost:8081/api/auth",
      "type": "default"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "default"
    },
    {
      "key": "userId",
      "value": "",
      "type": "default"
    },
    {
      "key": "feedId",
      "value": "",
      "type": "default"
    }
  ],
  "item": [
    {
      "name": "Authentication Setup",
      "item": [
        {
          "name": "Login to Get Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});",
                  "",
                  "var jsonData = pm.response.json();",
                  "if (jsonData.data && jsonData.data.accessToken) {",
                  "    pm.collectionVariables.set('accessToken', jsonData.data.accessToken);",
                  "    pm.collectionVariables.set('userId', jsonData.data.userId);",
                  "    console.log('Access Token:', jsonData.data.accessToken);",
                  "    console.log('User ID:', jsonData.data.userId);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"TestPass123!\"\n}"
            },
            "url": {
              "raw": "{{authServiceUrl}}/login",
              "host": ["{{authServiceUrl}}"],
              "path": ["login"]
            }
          }
        }
      ]
    },
    {
      "name": "Health & Status",
      "item": [
        {
          "name": "Feed Service Health Check",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Feed service is healthy', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "    pm.expect(jsonData.data).to.eql('OK');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          }
        }
      ]
    },
    {
      "name": "Feed Management",
      "item": [
        {
          "name": "Create Feed",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Feed created successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});",
                  "",
                  "var jsonData = pm.response.json();",
                  "if (jsonData.data && jsonData.data.id) {",
                  "    pm.collectionVariables.set('feedId', jsonData.data.id);",
                  "    console.log('Created Feed ID:', jsonData.data.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"content\": \"Building the next generation of fintech solutions from Bangalore! India's startup ecosystem is truly inspiring. #StartupIndia #TechForGood\",\n    \"emojis\": [\"üöÄ\", \"üáÆüá≥\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/create",
              "host": ["{{baseUrl}}"],
              "path": ["create"]
            }
          }
        },
        {
          "name": "Create Feed with Media",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Feed with media created successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"content\": \"Just witnessed the most beautiful sunrise over the Ganges in Varanasi. The spiritual energy here is unmatched. üôè #IncredibleIndia\",\n    \"emojis\": [\"üåÖ\", \"üôè\"],\n    \"media\": {\n        \"type\": \"single\",\n        \"items\": [\n            {\n                \"id\": \"media_1\",\n                \"type\": \"image\",\n                \"url\": \"https://picsum.photos/800/600?random=1\",\n                \"thumbnailUrl\": \"https://picsum.photos/400/300?random=1\",\n                \"altText\": \"Beautiful sunrise over Ganges\"\n            }\n        ]\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/create",
              "host": ["{{baseUrl}}"],
              "path": ["create"]
            }
          }
        },
        {
          "name": "Get Feed by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Feed retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "    pm.expect(jsonData.data.id).to.eql(pm.collectionVariables.get('feedId'));",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/{{feedId}}",
              "host": ["{{baseUrl}}"],
              "path": ["{{feedId}}"]
            }
          }
        },
        {
          "name": "Get User Feeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('User feeds retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "    pm.expect(jsonData.data.content).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/user/{{userId}}?page=0&size=10",
              "host": ["{{baseUrl}}"],
              "path": ["user", "{{userId}}"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Public Feeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Public feeds retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "    pm.expect(jsonData.data.content).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/public?page=0&size=10",
              "host": ["{{baseUrl}}"],
              "path": ["public"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Feed Interactions",
      "item": [
        {
          "name": "Like Feed",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Feed liked successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "    pm.expect(jsonData.data.isLiked).to.eql(true);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{baseUrl}}/{{feedId}}/like",
              "host": ["{{baseUrl}}"],
              "path": ["{{feedId}}", "like"]
            }
          }
        },
        {
          "name": "Retweet Feed",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Feed retweeted successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "    pm.expect(jsonData.data.isRetweeted).to.eql(true);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{baseUrl}}/{{feedId}}/retweet",
              "host": ["{{baseUrl}}"],
              "path": ["{{feedId}}", "retweet"]
            }
          }
        },
        {
          "name": "Bookmark Feed",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Feed bookmarked successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "    pm.expect(jsonData.data.isBookmarked).to.eql(true);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{baseUrl}}/{{feedId}}/bookmark",
              "host": ["{{baseUrl}}"],
              "path": ["{{feedId}}", "bookmark"]
            }
          }
        }
      ]
    },
    {
      "name": "Feed Replies",
      "item": [
        {
          "name": "Create Reply",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Reply created successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "    pm.expect(jsonData.data.parentFeedId).to.eql(pm.collectionVariables.get('feedId'));",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"content\": \"Great post! I completely agree with your thoughts on the startup ecosystem in India. üöÄ\",\n    \"emojis\": [\"üöÄ\"],\n    \"parentFeedId\": \"{{feedId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/create",
              "host": ["{{baseUrl}}"],
              "path": ["create"]
            }
          }
        },
        {
          "name": "Get Feed Replies",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Feed replies retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "    pm.expect(jsonData.data.content).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/{{feedId}}/replies?page=0&size=10",
              "host": ["{{baseUrl}}"],
              "path": ["{{feedId}}", "replies"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Search & Discovery",
      "item": [
        {
          "name": "Search Feeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Search results retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "    pm.expect(jsonData.data.content).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/search?q=startup&page=0&size=10",
              "host": ["{{baseUrl}}"],
              "path": ["search"],
              "query": [
                {
                  "key": "q",
                  "value": "startup"
                },
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Trending Feeds",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Trending feeds retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "    pm.expect(jsonData.data.content).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/trending?page=0&size=10",
              "host": ["{{baseUrl}}"],
              "path": ["trending"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Feed Management",
      "item": [
        {
          "name": "Delete Feed",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Feed deleted successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/{{feedId}}",
              "host": ["{{baseUrl}}"],
              "path": ["{{feedId}}"]
            }
          }
        }
      ]
    }
  ]
}
