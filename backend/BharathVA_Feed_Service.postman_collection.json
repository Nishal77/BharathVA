{
	"info": {
		"_postman_id": "bharathva-feed-service",
		"name": "BharathVA Feed Service",
		"description": "Complete collection for testing BharathVA Feed Service endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"test@bharathva.com\",\n  \"phoneNumber\": \"+919876543210\",\n  \"password\": \"TestPassword123!\"\n}"
						},
						"url": {
							"raw": "{{gateway_url}}/api/auth/register",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user to get JWT token"
					},
					"response": []
				},
				{
					"name": "Login User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"TestPassword123!\"\n}"
						},
						"url": {
							"raw": "{{gateway_url}}/api/auth/login",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login user and get JWT token"
					},
					"response": []
				},
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/auth/user/profile",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"auth",
								"user",
								"profile"
							]
						},
						"description": "Get current user profile using JWT token"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints to get JWT token"
		},
		{
			"name": "Feed Service - Health",
			"item": [
				{
					"name": "Feed Service Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{gateway_url}}/api/feed/health",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"feed",
								"health"
							]
						},
						"description": "Check if feed service is running (no auth required)"
					},
					"response": []
				},
				{
					"name": "Feed Service Health Check (Direct)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{feed_service_url}}/api/feed/health",
							"host": [
								"{{feed_service_url}}"
							],
							"path": [
								"api",
								"feed",
								"health"
							]
						},
						"description": "Check feed service directly (bypassing gateway)"
					},
					"response": []
				}
			],
			"description": "Health check endpoints for feed service"
		},
		{
			"name": "Feed Service - CRUD Operations",
			"item": [
				{
					"name": "Create Feed",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"{{user_id}}\",\n  \"message\": \"Hello from Postman! This is my first post on BharathVA. ðŸš€\"\n}"
						},
						"url": {
							"raw": "{{gateway_url}}/api/feed/create",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"feed",
								"create"
							]
						},
						"description": "Create a new feed post (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Create Feed (Direct)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"{{user_id}}\",\n  \"message\": \"Hello from Postman (Direct)! Testing direct feed service connection. ðŸ“±\"\n}"
						},
						"url": {
							"raw": "{{feed_service_url}}/api/feed/create",
							"host": [
								"{{feed_service_url}}"
							],
							"path": [
								"api",
								"feed",
								"create"
							]
						},
						"description": "Create a new feed post directly to feed service"
					},
					"response": []
				},
				{
					"name": "Get User Feeds",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/feed/user/{{user_id}}",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"feed",
								"user",
								"{{user_id}}"
							]
						},
						"description": "Get all feeds for a specific user (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Get All Feeds",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/feed/all",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"feed",
								"all"
							]
						},
						"description": "Get all feeds from all users (requires authentication)"
					},
					"response": []
				}
			],
			"description": "CRUD operations for feed service"
		},
		{
			"name": "Feed Service - Error Testing",
			"item": [
				{
					"name": "Create Feed - No Auth",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"test-user-id\",\n  \"message\": \"This should fail - no auth token\"\n}"
						},
						"url": {
							"raw": "{{gateway_url}}/api/feed/create",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"feed",
								"create"
							]
						},
						"description": "Try to create feed without authentication (should return 401)"
					},
					"response": []
				},
				{
					"name": "Create Feed - Wrong User ID",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"different-user-id\",\n  \"message\": \"This should fail - wrong user ID\"\n}"
						},
						"url": {
							"raw": "{{gateway_url}}/api/feed/create",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"feed",
								"create"
							]
						},
						"description": "Try to create feed for different user (should return 403)"
					},
					"response": []
				},
				{
					"name": "Get User Feeds - Wrong User ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/feed/user/different-user-id",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"feed",
								"user",
								"different-user-id"
							]
						},
						"description": "Try to get feeds for different user (should return 403)"
					},
					"response": []
				}
			],
			"description": "Error testing scenarios"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-extract JWT token from login response",
					"if (pm.response && pm.response.json() && pm.response.json().accessToken) {",
					"    pm.environment.set('jwt_token', pm.response.json().accessToken);",
					"    console.log('JWT token extracted and set');",
					"}",
					"",
					"// Auto-extract user ID from profile response",
					"if (pm.response && pm.response.json() && pm.response.json().id) {",
					"    pm.environment.set('user_id', pm.response.json().id);",
					"    console.log('User ID extracted and set:', pm.response.json().id);",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Test response status",
					"pm.test('Response status is successful', function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
					"});",
					"",
					"// Test response time",
					"pm.test('Response time is less than 5000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"// Test response has body",
					"pm.test('Response has body', function () {",
					"    pm.expect(pm.response.text()).to.not.be.empty;",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "gateway_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "feed_service_url",
			"value": "http://localhost:8082",
			"type": "string"
		},
		{
			"key": "auth_service_url",
			"value": "http://localhost:8081",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		}
	]
}


