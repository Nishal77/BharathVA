{
  "info": {
    "name": "BharathVA Registration API",
    "description": "Complete user registration flow for BharathVA backend",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "123456"
  },
  "item": [
    {
      "name": "Health Check",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Service is running\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "    pm.expect(jsonData.data).to.eql(\"OK\");",
              "});",
              "",
              "console.log(\"‚úÖ Auth Service is healthy and running!\");"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/register/health",
          "host": ["{{baseUrl}}"],
          "path": ["register", "health"]
        },
        "description": "Check if the auth service is running"
      },
      "response": []
    },
    {
      "name": "1. Register Email",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response is successful\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "});",
              "",
              "pm.test(\"Session token exists\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.sessionToken).to.exist;",
              "    ",
              "    // Save sessionToken to environment",
              "    var token = jsonData.data.sessionToken;",
              "    pm.environment.set(\"sessionToken\", token);",
              "    pm.collectionVariables.set(\"sessionToken\", token);",
              "    ",
              "    console.log(\"Session Token: \" + token);",
              "});",
              "",
              "pm.test(\"Current step is OTP\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.currentStep).to.eql(\"OTP\");",
              "});",
              "",
              "console.log(\"‚úÖ Session Token saved:\", pm.environment.get(\"sessionToken\"));",
              "console.log(\"üìß CHECK YOUR EMAIL FOR OTP!\");"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"{{testEmail}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/register/email",
          "host": ["{{baseUrl}}"],
          "path": ["register", "email"]
        },
        "description": "Step 1: Register with email and receive OTP"
      },
      "response": []
    },
    {
      "name": "2. Verify OTP",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"OTP verified successfully\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "    pm.expect(jsonData.data.currentStep).to.eql(\"DETAILS\");",
              "});",
              "",
              "console.log(\"‚úÖ OTP verified! Moving to details step.\");"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"sessionToken\": \"{{sessionToken}}\",\n    \"otp\": \"123456\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/register/verify-otp",
          "host": ["{{baseUrl}}"],
          "path": ["register", "verify-otp"]
        },
        "description": "Step 2: Verify the OTP received in email (REPLACE 123456 with actual OTP!)"
      },
      "response": []
    },
    {
      "name": "3. Resend OTP",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"sessionToken\": \"{{sessionToken}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/register/resend-otp",
          "host": ["{{baseUrl}}"],
          "path": ["register", "resend-otp"]
        },
        "description": "Optional: Resend OTP if not received or expired"
      },
      "response": []
    },
    {
      "name": "4. Submit User Details",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Details saved successfully\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "    pm.expect(jsonData.data.currentStep).to.eql(\"PASSWORD\");",
              "});",
              "",
              "console.log(\"‚úÖ Details saved! Moving to password step.\");"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"sessionToken\": \"{{sessionToken}}\",\n    \"fullName\": \"Nishal Poojary\",\n    \"phoneNumber\": \"9876543210\",\n    \"countryCode\": \"+91\",\n    \"dateOfBirth\": \"1995-05-15\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/register/details",
          "host": ["{{baseUrl}}"],
          "path": ["register", "details"]
        },
        "description": "Step 3: Submit user details (name, phone, DOB)"
      },
      "response": []
    },
    {
      "name": "5. Create Password",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Password created successfully\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "    pm.expect(jsonData.data.currentStep).to.eql(\"USERNAME\");",
              "});",
              "",
              "console.log(\"‚úÖ Password created! Moving to username step.\");"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"sessionToken\": \"{{sessionToken}}\",\n    \"password\": \"SecurePass123!\",\n    \"confirmPassword\": \"SecurePass123!\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/register/password",
          "host": ["{{baseUrl}}"],
          "path": ["register", "password"]
        },
        "description": "Step 4: Create a secure password (min 8 characters)"
      },
      "response": []
    },
    {
      "name": "6. Check Username Availability",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var jsonData = pm.response.json();",
              "",
              "if (jsonData.data.available) {",
              "    console.log(\"‚úÖ Username is available!\");",
              "} else {",
              "    console.log(\"‚ùå Username is taken. Try another.\");",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/register/check-username?username=nishalpoojary",
          "host": ["{{baseUrl}}"],
          "path": ["register", "check-username"],
          "query": [
            {
              "key": "username",
              "value": "nishalpoojary",
              "description": "Username to check"
            }
          ]
        },
        "description": "Step 5: Check if username is available"
      },
      "response": []
    },
    {
      "name": "7. Create Username (Complete!)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Registration completed\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "    pm.expect(jsonData.data.currentStep).to.eql(\"COMPLETED\");",
              "});",
              "",
              "console.log(\"üéâ REGISTRATION COMPLETE!\");",
              "console.log(\"üìß Check your email for welcome message!\");",
              "",
              "// Clear session token",
              "pm.environment.set(\"sessionToken\", \"\");"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"sessionToken\": \"{{sessionToken}}\",\n    \"username\": \"nishalpoojary\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/register/username",
          "host": ["{{baseUrl}}"],
          "path": ["register", "username"]
        },
        "description": "Step 6: Choose username and complete registration!"
      },
      "response": []
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080/api/auth",
      "type": "default"
    },
    {
      "key": "testEmail",
      "value": "nishalpoojary@gmail.com",
      "type": "default"
    },
    {
      "key": "sessionToken",
      "value": "",
      "type": "default"
    }
  ]
}

